apiVersion: apps/v1
kind: Deployment
metadata:
  name: "springbootserver"
  labels:
    app: "springbootserver"
spec:
  selector:
    matchLabels:
      app: springbootserver
  replicas: 1
  template:
    metadata:
      labels:
        app: "springbootserver"
    spec:
      containers:
        - name: springbootserver
          image: "mwacha/hello-springboot:v6.8"

          resources:
            requests: # o quanto que o container que estamos trabalhando exige o mínimo p/ ele funcionar
              cpu: "0.3"
              memory: "512Mi"
            limits: # até onde esse pod pode utilizar de recursos no nosso cluster
              cpu: "1"
              memory: "1Gi"


          startupProbe:
            httpGet:
              path: /healthz
              port: 8080 #porta do container
            periodSeconds: 3 # a cada 5 segundos, vai fazer a verificação se a aplicação está pronta
            failureThreshold: 1 # quandas vezes é necessário que o erro ocorra pra reiniciar o pod
            initialDelaySeconds: 30 # Aguarda x segundos para começar a verificcar o periodSeconds

          readinessProbe: # só começa quando o startupProbe ficar pronto
            httpGet:
              path: /healthz
              port: 8080 #porta do container
            periodSeconds: 3 # a cada 3 segundos, vai fazer a verificação se a aplicação está pronta
            failureThreshold: 1 # quandas vezes é necessário que o erro ocorra pra reiniciar o pod
           # initialDelaySeconds: 10 # Aguarda x segundos para começar a verificcar o periodSeconds


          livenessProbe: # só começa quando o startupProbe ficar pronto
            httpGet:
              path: /healthz
              port: 8080 #porta do container
            periodSeconds: 5 # a cada 5 segundos, vai fazer a verificação
            failureThreshold: 1 # quandas vezes é necessário que o erro ocorra pra reiniciar o pod
            timeoutSeconds: 1 # tempo para completar a requisição
            successThreshold: 1 # número de tentativas informando que o sistema está ok.
            #initialDelaySeconds: 15

          envFrom:
            - configMapRef:
                name: springbootserver-env
            - secretRef:
                name: springbootserver-secret
          volumeMounts: # monta o o volume config(declarado abaixo) dentro da aplicação
            - mountPath: "/java/myfamily"
              name: config
            - mountPath: /java/pvc
              name: springbootserver-pvc

      volumes:
        - name: springbootserver-pvc
          persistentVolumeClaim:
            claimName: springbootserver-pvc #nome configurado no arquivo pvc.yaml
        - name: config
          configMap:
            name: configmap-family # nome do configmap-family
            items:
            - key: members # dados que estão no configmap-family
              path: "family.txt"
